# Generated by Django 4.2.10 on 2025-07-31 12:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tenants", "0030_alter_permissionregistry_resource_type"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_id",
                    models.CharField(
                        help_text="Business identifier, unique within tenant",
                        max_length=100,
                    ),
                ),
                (
                    "global_id",
                    models.CharField(
                        help_text="Globally unique identifier within tenant",
                        max_length=100,
                    ),
                ),
                (
                    "site_name",
                    models.CharField(
                        help_text="Human-readable site name", max_length=255
                    ),
                ),
                (
                    "town",
                    models.CharField(help_text="City/town location", max_length=100),
                ),
                (
                    "cluster",
                    models.CharField(
                        help_text="Operational grouping/region", max_length=100
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Geographic coordinate",
                        max_digits=9,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Geographic coordinate",
                        max_digits=9,
                    ),
                ),
                ("state", models.CharField(blank=True, max_length=100)),
                ("country", models.CharField(default="India", max_length=100)),
                ("district", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                (
                    "elevation",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Elevation in meters",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "site_type",
                    models.CharField(
                        choices=[
                            ("tower", "Tower"),
                            ("data_center", "Data Center"),
                            ("exchange", "Exchange"),
                            ("substation", "Substation"),
                            ("office", "Office"),
                            ("warehouse", "Warehouse"),
                            ("other", "Other"),
                        ],
                        default="tower",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("maintenance", "Under Maintenance"),
                            ("decommissioned", "Decommissioned"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "access_instructions",
                    models.TextField(
                        blank=True, help_text="Instructions for accessing the site"
                    ),
                ),
                (
                    "safety_requirements",
                    models.TextField(
                        blank=True, help_text="Safety requirements and precautions"
                    ),
                ),
                (
                    "landmark_description",
                    models.TextField(
                        blank=True, help_text="Nearby landmarks for navigation"
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                ("address", models.TextField(blank=True)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                ("site_code", models.CharField(blank=True, max_length=50)),
                ("contact_person", models.CharField(blank=True, max_length=255)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                ("contact_email", models.EmailField(blank=True, max_length=254)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, help_text="Soft delete timestamp", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_sites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sites",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Site",
                "verbose_name_plural": "Sites",
                "db_table": "sites",
                "ordering": ["site_name"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "status", "deleted_at"],
                        name="sites_tenant__c51b2b_idx",
                    ),
                    models.Index(
                        fields=["site_type", "status"], name="sites_site_ty_f682a9_idx"
                    ),
                    models.Index(
                        fields=["latitude", "longitude"],
                        name="sites_latitud_8be2e3_idx",
                    ),
                    models.Index(
                        fields=["town", "state"], name="sites_town_9de435_idx"
                    ),
                    models.Index(fields=["cluster"], name="sites_cluster_aa2069_idx"),
                    models.Index(fields=["site_id"], name="sites_site_id_4fefc1_idx"),
                    models.Index(fields=["global_id"], name="sites_global__dcf631_idx"),
                    models.Index(
                        fields=["deleted_at"], name="sites_deleted_833302_idx"
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="site",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("tenant", "site_id"),
                name="unique_site_id_per_tenant",
            ),
        ),
        migrations.AddConstraint(
            model_name="site",
            constraint=models.UniqueConstraint(
                condition=models.Q(("deleted_at__isnull", True)),
                fields=("tenant", "global_id"),
                name="unique_global_id_per_tenant",
            ),
        ),
    ]
