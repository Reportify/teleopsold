# Generated by Django 4.2.10 on 2025-08-09 10:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tenants", "0032_transfer_circle_vendor_data"),
    ]

    operations = [
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "equipment_type",
                    models.CharField(
                        choices=[
                            ("antenna", "Antenna"),
                            ("transmitter", "Transmitter"),
                            ("receiver", "Receiver"),
                            ("amplifier", "Amplifier"),
                            ("filter", "Filter"),
                            ("power_supply", "Power Supply"),
                            ("battery", "Battery"),
                            ("cable", "Cable"),
                            ("connector", "Connector"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("operational", "Operational"),
                            ("maintenance", "Under Maintenance"),
                            ("faulty", "Faulty"),
                            ("decommissioned", "Decommissioned"),
                            ("spare", "Spare"),
                        ],
                        default="operational",
                        max_length=20,
                    ),
                ),
                ("model", models.CharField(blank=True, max_length=255)),
                ("serial_number", models.CharField(blank=True, max_length=255)),
                ("manufacturer", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("specifications", models.JSONField(blank=True, default=dict)),
                ("installation_date", models.DateField(blank=True, null=True)),
                ("warranty_expiry", models.DateField(blank=True, null=True)),
                ("last_maintenance", models.DateField(blank=True, null=True)),
                ("next_maintenance", models.DateField(blank=True, null=True)),
                ("location_details", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Equipment",
                "verbose_name_plural": "Equipment",
                "db_table": "site_equipments",
                "ordering": ["name"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EquipmentMaintenance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "maintenance_type",
                    models.CharField(
                        choices=[
                            ("preventive", "Preventive"),
                            ("corrective", "Corrective"),
                            ("emergency", "Emergency"),
                            ("upgrade", "Upgrade"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("scheduled_date", models.DateField()),
                ("completed_date", models.DateField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Equipment Maintenance",
                "verbose_name_plural": "Equipment Maintenance",
                "db_table": "equipment_maintenance",
                "ordering": ["-scheduled_date"],
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TechnologyTag",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_technology_tags",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="technology_tags",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Technology Tag",
                "verbose_name_plural": "Technology Tags",
                "db_table": "technology_tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EquipmentInventoryItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Primary item name or material description",
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("material_code", models.CharField(blank=True, max_length=100)),
                ("category", models.CharField(blank=True, max_length=100)),
                ("sub_category", models.CharField(blank=True, max_length=100)),
                ("manufacturer", models.CharField(blank=True, max_length=255)),
                (
                    "unit_of_measurement",
                    models.CharField(
                        choices=[
                            ("Unit", "Unit"),
                            ("Meter", "Meter"),
                            ("Kilogram", "Kilogram"),
                            ("Liter", "Liter"),
                            ("Square Meter", "Square Meter"),
                        ],
                        default="Unit",
                        max_length=20,
                    ),
                ),
                ("specifications", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_equipment_inventory_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        blank=True,
                        related_name="equipment_items",
                        to="equipment.technologytag",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipment_inventory_items",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Inventory Item",
                "verbose_name_plural": "Equipment Inventory Items",
                "db_table": "equipment_inventory",
                "ordering": ["name"],
            },
        ),
        migrations.AddConstraint(
            model_name='equipmentinventoryitem',
            constraint=models.UniqueConstraint(fields=('tenant','material_code'), condition=~models.Q(material_code=''), name='uniq_tenant_material_code_not_blank'),
        ),
        migrations.AddIndex(
            model_name="technologytag",
            index=models.Index(
                fields=["tenant", "name"], name="technology__tenant__de6482_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="technologytag",
            index=models.Index(
                fields=["tenant", "is_active"], name="technology__tenant__baa567_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="technologytag",
            unique_together={("tenant", "name")},
        ),
        migrations.AddIndex(
            model_name="equipmentinventoryitem",
            index=models.Index(
                fields=["tenant", "name"], name="equipment_i_tenant__abd31c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="equipmentinventoryitem",
            index=models.Index(
                fields=["tenant", "material_code"],
                name="equipment_i_tenant__b2cf37_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="equipmentinventoryitem",
            index=models.Index(
                fields=["tenant", "category"], name="equipment_i_tenant__e90258_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="equipmentinventoryitem",
            index=models.Index(
                fields=["tenant", "manufacturer"], name="equipment_i_tenant__369d1a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="equipmentinventoryitem",
            index=models.Index(
                fields=["tenant", "is_active"], name="equipment_i_tenant__335956_idx"
            ),
        ),
    ]
