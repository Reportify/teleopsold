# Generated by Django 5.2.4 on 2025-08-23 07:16

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("tasks", "0005_add_relocation_category"),
        ("sites", "0004_remove_site_sites_town_9de435_idx_and_more"),
        ("projects", "0011_vendorinvitation_projectvendor_and_more"),
        ("tenants", "0032_transfer_circle_vendor_data"),
        migrations.swappable_dependency("apps_users.User"),
    ]

    operations = [
        migrations.CreateModel(
            name="TaskFromFlow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "task_id",
                    models.CharField(
                        help_text="Business task identifier", max_length=50
                    ),
                ),
                (
                    "client_task_id",
                    models.CharField(
                        blank=True,
                        help_text="Client-provided unique task ID",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "is_client_id_provided",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the task ID was provided by the client",
                    ),
                ),
                (
                    "task_name",
                    models.CharField(
                        help_text="Name of the task", max_length=255
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the task"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("on_hold", "On Hold"),
                        ],
                        default="pending",
                        max_length=25,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "scheduled_start",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "scheduled_end",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "actual_start",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "actual_end",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_flow_tasks",
                        to="apps_users.user",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_flow_tasks",
                        to="apps_users.user",
                    ),
                ),
                (
                    "flow_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tasks",
                        to="tasks.flowtemplate",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flow_tasks",
                        to="projects.project",
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supervised_flow_tasks",
                        to="apps_users.user",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flow_tasks",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "db_table": "tasks_from_flow",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskSiteGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "site_alias",
                    models.CharField(
                        help_text="Site alias from flow template (e.g., 'Near-end', 'Far-end')",
                        max_length=50,
                    ),
                ),
                (
                    "assignment_order",
                    models.IntegerField(
                        default=0,
                        help_text="Order within the site group",
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this is the primary site for the task",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("PRIMARY", "Primary"),
                            ("SECONDARY", "Secondary"),
                            ("COORDINATION", "Coordination"),
                        ],
                        default="SECONDARY",
                        max_length=20,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="flow_task_groups",
                        to="sites.site",
                    ),
                ),
                (
                    "task_from_flow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="site_groups",
                        to="tasks.taskfromflow",
                    ),
                ),
            ],
            options={
                "db_table": "task_site_groups",
                "ordering": ["assignment_order"],
            },
        ),
        migrations.CreateModel(
            name="TaskSubActivity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "sequence_order",
                    models.IntegerField(
                        help_text="Local sequence order within this task"
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("installation", "Installation"),
                            ("maintenance", "Maintenance"),
                            ("dismantling", "Dismantling"),
                            ("survey", "Survey"),
                            ("audit", "Audit"),
                            ("repair", "Repair"),
                            ("upgrade", "Upgrade"),
                            ("testing", "Testing"),
                            ("commissioning", "Commissioning"),
                            ("rf_survey", "RF Survey"),
                            ("emf_survey", "EMF Survey"),
                            ("rfi_survey", "RFI Survey"),
                            ("transportation", "Transportation"),
                            ("packaging", "Packaging"),
                            ("deviation_email", "Deviation Email"),
                            ("rsa", "RSA"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "activity_name",
                    models.CharField(max_length=255),
                ),
                (
                    "description",
                    models.TextField(),
                ),
                (
                    "site_alias",
                    models.CharField(
                        help_text="Site alias from flow template",
                        max_length=50,
                    ),
                ),
                (
                    "dependencies",
                    models.JSONField(
                        default=list,
                        help_text="List of sub-task IDs this depends on",
                    ),
                ),
                (
                    "dependency_scope",
                    models.CharField(
                        choices=[
                            ("SITE_LOCAL", "Site Local"),
                            ("CROSS_SITE", "Cross Site"),
                            ("GLOBAL", "Global"),
                        ],
                        default="SITE_LOCAL",
                        max_length=20,
                    ),
                ),
                (
                    "parallel_execution",
                    models.BooleanField(
                        default=False,
                        help_text="Can this activity run in parallel",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("equipment_verification", "Equipment Verification"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("on_hold", "On Hold"),
                            ("failed", "Failed"),
                            ("rework_required", "Rework Required"),
                        ],
                        default="pending",
                        max_length=25,
                    ),
                ),
                (
                    "actual_start",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "actual_end",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "progress_percentage",
                    models.IntegerField(default=0),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional notes for this sub-activity",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True),
                ),
                (
                    "assigned_site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_activities",
                        to="sites.site",
                    ),
                ),
                (
                    "flow_activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_instances",
                        to="tasks.flowactivity",
                    ),
                ),
                (
                    "task_from_flow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_activities",
                        to="tasks.taskfromflow",
                    ),
                ),
            ],
            options={
                "db_table": "task_sub_activities",
                "ordering": ["sequence_order"],
            },
        ),
        migrations.AddConstraint(
            model_name="taskfromflow",
            constraint=models.UniqueConstraint(
                fields=["tenant", "task_id"],
                name="unique_tenant_task_id",
            ),
        ),
        migrations.AddConstraint(
            model_name="taskfromflow",
            constraint=models.UniqueConstraint(
                fields=["tenant", "client_task_id"],
                name="unique_tenant_client_task_id",
            ),
        ),
        migrations.AddConstraint(
            model_name="tasksitegroup",
            constraint=models.UniqueConstraint(
                fields=["task_from_flow", "site_alias"],
                name="unique_task_site_alias",
            ),
        ),
        migrations.AddConstraint(
            model_name="tasksubactivity",
            constraint=models.UniqueConstraint(
                fields=["task_from_flow", "sequence_order"],
                name="unique_task_sequence_order",
            ),
        ),
    ]
