# Generated by Django 4.2.10 on 2025-07-22 18:23

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tenants", "0019_rbac_system"),
    ]

    operations = [
        migrations.CreateModel(
            name="TenantDesignation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "designation_name",
                    models.CharField(
                        help_text="Human-readable designation name (e.g., 'Project Manager')",
                        max_length=255,
                    ),
                ),
                (
                    "designation_code",
                    models.CharField(
                        help_text="Unique code for this designation within the tenant",
                        max_length=100,
                    ),
                ),
                (
                    "designation_level",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Hierarchy level (1 = highest, higher numbers = lower levels)",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Department or functional area (tenant-defined)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of this designation's responsibilities",
                        null=True,
                    ),
                ),
                (
                    "can_manage_subordinates",
                    models.BooleanField(
                        default=False,
                        help_text="Can this designation manage users with lower-level designations",
                    ),
                ),
                (
                    "approval_authority_level",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Approval authority level (tenant-defined scale)",
                    ),
                ),
                (
                    "delegation_allowed",
                    models.BooleanField(
                        default=False,
                        help_text="Can this designation delegate permissions to others",
                    ),
                ),
                (
                    "max_subordinates",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of direct subordinates (null = unlimited)",
                        null=True,
                    ),
                ),
                (
                    "hierarchy_path",
                    models.TextField(
                        blank=True,
                        help_text="Materialized path for efficient hierarchy queries",
                        null=True,
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of permission codes assigned to this designation",
                    ),
                ),
                (
                    "feature_access",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Feature access levels (tenant-defined)",
                    ),
                ),
                (
                    "data_access_level",
                    models.CharField(
                        choices=[
                            ("Full", "Full Access"),
                            ("Limited", "Limited Access"),
                            ("Restricted", "Restricted Access"),
                            ("View_Only", "View Only"),
                        ],
                        default="View_Only",
                        help_text="Overall data access level",
                        max_length=50,
                    ),
                ),
                (
                    "custom_capabilities",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Tenant-specific custom capabilities",
                    ),
                ),
                (
                    "geographic_scope",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Geographic areas this designation can access",
                    ),
                ),
                (
                    "functional_scope",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Functional areas this designation can access",
                    ),
                ),
                (
                    "cross_functional_access",
                    models.BooleanField(
                        default=False,
                        help_text="Can access functions outside assigned scope",
                    ),
                ),
                (
                    "multi_location_access",
                    models.BooleanField(
                        default=False,
                        help_text="Can access multiple geographic locations",
                    ),
                ),
                (
                    "can_manage_users",
                    models.BooleanField(
                        default=False,
                        help_text="Can manage user accounts and assignments",
                    ),
                ),
                (
                    "can_create_projects",
                    models.BooleanField(
                        default=False, help_text="Can create new projects"
                    ),
                ),
                (
                    "can_assign_tasks",
                    models.BooleanField(
                        default=False, help_text="Can assign tasks to team members"
                    ),
                ),
                (
                    "can_approve_expenses",
                    models.BooleanField(
                        default=False, help_text="Can approve expense requests"
                    ),
                ),
                (
                    "can_access_reports",
                    models.BooleanField(
                        default=False, help_text="Can access reporting and analytics"
                    ),
                ),
                (
                    "expense_approval_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Maximum expense amount this designation can approve",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "is_system_role",
                    models.BooleanField(
                        default=False,
                        help_text="True only for system-defined roles like Super Admin",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this designation is currently active",
                    ),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this designation serves as a template",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, help_text="Soft delete timestamp", null=True
                    ),
                ),
            ],
            options={
                "db_table": "designations",
                "ordering": ["tenant_id", "designation_level", "designation_name"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="designation",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="designation",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="designation",
            name="tenant",
        ),
        migrations.AlterModelOptions(
            name="custompermission",
            options={
                "ordering": [
                    "tenant_id",
                    "category__sort_order",
                    "sort_order",
                    "permission_name",
                ]
            },
        ),
        migrations.AlterModelOptions(
            name="designationpermission",
            options={"ordering": ["designation", "permission"]},
        ),
        migrations.AlterModelOptions(
            name="designationtemplate",
            options={"ordering": ["tenant_id", "template_name"]},
        ),
        migrations.AlterModelOptions(
            name="permissioncategory",
            options={
                "ordering": ["tenant_id", "sort_order", "category_name"],
                "verbose_name": "Permission Category",
                "verbose_name_plural": "Permission Categories",
            },
        ),
        migrations.AlterModelOptions(
            name="userdesignationassignment",
            options={"ordering": ["user_profile", "designation"]},
        ),
        migrations.RemoveIndex(
            model_name="custompermission",
            name="custom_perm_tenant__4d5b70_idx",
        ),
        migrations.RemoveIndex(
            model_name="custompermission",
            name="custom_perm_categor_c7a423_idx",
        ),
        migrations.RemoveIndex(
            model_name="designationpermission",
            name="designation_designa_5d86ca_idx",
        ),
        migrations.RemoveIndex(
            model_name="designationpermission",
            name="designation_permiss_c23a6c_idx",
        ),
        migrations.RemoveIndex(
            model_name="designationpermission",
            name="designation_is_acti_299b79_idx",
        ),
        migrations.RemoveIndex(
            model_name="designationtemplate",
            name="designation_tenant__f6dbbe_idx",
        ),
        migrations.RemoveIndex(
            model_name="designationtemplate",
            name="designation_is_publ_d26ac4_idx",
        ),
        migrations.RemoveIndex(
            model_name="permissioncategory",
            name="permission__tenant__3fc90e_idx",
        ),
        migrations.RemoveIndex(
            model_name="userdesignationassignment",
            name="user_design_user_pr_459e2f_idx",
        ),
        migrations.RemoveIndex(
            model_name="userdesignationassignment",
            name="user_design_designa_44d087_idx",
        ),
        migrations.RemoveIndex(
            model_name="userdesignationassignment",
            name="user_design_is_acti_8e1f72_idx",
        ),
        migrations.RemoveIndex(
            model_name="userdesignationassignment",
            name="user_design_is_prim_ab2757_idx",
        ),
        migrations.RemoveField(
            model_name="tenantuserprofile",
            name="designation",
        ),
        migrations.RemoveField(
            model_name="tenantuserprofile",
            name="designations",
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="category",
            field=models.ForeignKey(
                help_text="Category this permission belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="permissions",
                to="tenants.permissioncategory",
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_custom_permissions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of what this permission allows",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this permission is currently active"
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="is_delegatable",
            field=models.BooleanField(
                default=True,
                help_text="Whether this permission can be delegated to others",
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="permission_code",
            field=models.CharField(
                help_text="Unique code for this permission within the tenant",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="permission_name",
            field=models.CharField(
                help_text="Human-readable permission name", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="permission_type",
            field=models.CharField(
                choices=[
                    ("action", "Action"),
                    ("access", "Access"),
                    ("approval", "Approval"),
                    ("management", "Management"),
                    ("reporting", "Reporting"),
                    ("custom", "Custom"),
                ],
                default="action",
                help_text="Type of permission",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="requires_approval",
            field=models.BooleanField(
                default=False,
                help_text="Whether using this permission requires approval",
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="scope_required",
            field=models.BooleanField(
                default=False,
                help_text="Whether this permission requires geographic/functional scope",
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="sort_order",
            field=models.PositiveIntegerField(
                default=0, help_text="Display order within category"
            ),
        ),
        migrations.AlterField(
            model_name="custompermission",
            name="tenant",
            field=models.ForeignKey(
                help_text="Tenant that owns this permission",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="custom_permissions",
                to="tenants.tenant",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="approval_required",
            field=models.BooleanField(
                default=False,
                help_text="Whether this permission assignment requires approval",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="conditions",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Conditional requirements for this permission",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="effective_from",
            field=models.DateField(
                default=datetime.date.today,
                help_text="Date when this permission becomes effective",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="effective_to",
            field=models.DateField(
                blank=True,
                help_text="Date when this permission expires (null = permanent)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="granted_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who granted this permission",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="granted_designation_permissions_new",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether this permission assignment is currently active",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="is_temporary",
            field=models.BooleanField(
                default=False,
                help_text="Whether this is a temporary permission assignment",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="permission",
            field=models.ForeignKey(
                help_text="Permission being assigned",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="designation_assignments",
                to="tenants.custompermission",
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="permission_level",
            field=models.CharField(
                choices=[
                    ("granted", "Granted"),
                    ("denied", "Denied"),
                    ("conditional", "Conditional"),
                    ("approval_required", "Approval Required"),
                ],
                default="granted",
                help_text="Level of permission assignment",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="revoked_at",
            field=models.DateTimeField(
                blank=True, help_text="When this permission was revoked", null=True
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="revoked_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who revoked this permission",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="revoked_designation_permissions_new",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="scope_restriction",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Geographic/functional scope restrictions",
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_designation_templates",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="designation_data",
            field=models.JSONField(help_text="Complete designation configuration data"),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="hierarchy_suggestions",
            field=models.JSONField(
                blank=True, default=dict, help_text="Suggested hierarchy relationships"
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="industry_category",
            field=models.CharField(
                blank=True,
                help_text="Industry category this template is designed for",
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this template is currently active"
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="is_public",
            field=models.BooleanField(
                default=False,
                help_text="Whether this template can be shared with other tenants",
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="is_verified",
            field=models.BooleanField(
                default=False,
                help_text="Whether this template has been verified by the platform",
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="permission_set",
            field=models.JSONField(
                help_text="Associated permissions for this designation template"
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="template_description",
            field=models.TextField(
                blank=True, help_text="Description of this template", null=True
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="template_name",
            field=models.CharField(
                help_text="Name of this designation template", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="tenant",
            field=models.ForeignKey(
                help_text="Tenant that owns this template",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="designation_templates",
                to="tenants.tenant",
            ),
        ),
        migrations.AlterField(
            model_name="designationtemplate",
            name="usage_count",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of times this template has been used"
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="category_code",
            field=models.CharField(
                help_text="Unique code for this category within the tenant",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="category_name",
            field=models.CharField(
                help_text="Human-readable category name", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_permission_categories",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed description of this permission category",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this category is currently active"
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="is_system_category",
            field=models.BooleanField(
                default=False, help_text="True for core platform categories"
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="sort_order",
            field=models.PositiveIntegerField(
                default=0, help_text="Display order for this category"
            ),
        ),
        migrations.AlterField(
            model_name="permissioncategory",
            name="tenant",
            field=models.ForeignKey(
                help_text="Tenant that owns this permission category",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="permission_categories",
                to="tenants.tenant",
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="approval_required",
            field=models.BooleanField(
                default=False, help_text="Whether this assignment requires approval"
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who approved this assignment",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_designation_assignments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="assigned_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who made this assignment",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_designations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="assignment_reason",
            field=models.CharField(
                blank=True,
                help_text="Reason for this designation assignment",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="assignment_status",
            field=models.CharField(
                choices=[
                    ("Pending", "Pending"),
                    ("Active", "Active"),
                    ("Suspended", "Suspended"),
                    ("Expired", "Expired"),
                    ("Revoked", "Revoked"),
                ],
                default="Active",
                help_text="Current status of this assignment",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="auto_expire",
            field=models.BooleanField(
                default=False, help_text="Whether this assignment should auto-expire"
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="effective_from",
            field=models.DateField(
                default=datetime.date.today,
                help_text="Date when this assignment becomes effective",
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="effective_to",
            field=models.DateField(
                blank=True,
                help_text="Date when this assignment expires (null = permanent)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="functional_scope_override",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Override for functional scope restrictions",
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="geographic_scope_override",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Override for geographic scope restrictions",
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="id",
            field=models.BigAutoField(
                auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="is_active",
            field=models.BooleanField(
                default=True, help_text="Whether this assignment is currently active"
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="is_primary_designation",
            field=models.BooleanField(
                default=True, help_text="Whether this is the user's primary designation"
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="is_temporary",
            field=models.BooleanField(
                default=False, help_text="Whether this is a temporary assignment"
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="permission_overrides",
            field=models.JSONField(
                blank=True,
                default=dict,
                help_text="Additional or restricted permissions for this user",
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="user_profile",
            field=models.ForeignKey(
                help_text="User being assigned the designation",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="designation_assignments",
                to="tenants.tenantuserprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="custompermission",
            index=models.Index(
                fields=["tenant", "category"], name="custom_perm_tenant__55cc33_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="custompermission",
            index=models.Index(
                fields=["tenant", "is_active"], name="custom_perm_tenant__8c9887_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="custompermission",
            index=models.Index(
                fields=["permission_type"], name="custom_perm_permiss_e78135_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["designation", "is_active"],
                name="designation_designa_27f4a8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["permission", "is_active"],
                name="designation_permiss_71b8cd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["effective_from", "effective_to"],
                name="designation_effecti_4bf61a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["granted_at"], name="designation_granted_0859e7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["tenant", "template_name"],
                name="designation_tenant__beb61b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["is_public", "is_verified"],
                name="designation_is_publ_550ccb_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["usage_count"], name="designation_usage_c_487764_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["created_at"], name="designation_created_67126a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissioncategory",
            index=models.Index(
                fields=["tenant", "is_active"], name="permission__tenant__029c89_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissioncategory",
            index=models.Index(
                fields=["is_system_category"], name="permission__is_syst_c8126c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantuserprofile",
            index=models.Index(
                fields=["tenant", "is_active"], name="tenant_user_tenant__a8ed66_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantuserprofile",
            index=models.Index(
                fields=["user", "tenant"], name="tenant_user_user_id_465c07_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantuserprofile",
            index=models.Index(
                fields=["employee_id"], name="tenant_user_employe_b777aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantuserprofile",
            index=models.Index(
                fields=["created_at"], name="tenant_user_created_0ca0dd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userdesignationassignment",
            index=models.Index(
                fields=["user_profile", "is_active"],
                name="user_design_user_pr_3202ca_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userdesignationassignment",
            index=models.Index(
                fields=["designation", "is_active"],
                name="user_design_designa_8728ae_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userdesignationassignment",
            index=models.Index(
                fields=["user_profile", "is_primary_designation"],
                name="user_design_user_pr_8f7ea2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userdesignationassignment",
            index=models.Index(
                fields=["effective_from", "effective_to"],
                name="user_design_effecti_151719_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="userdesignationassignment",
            index=models.Index(
                fields=["assignment_status"], name="user_design_assignm_2dfba9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userdesignationassignment",
            index=models.Index(
                fields=["created_at"], name="user_design_created_9afb33_idx"
            ),
        ),
        migrations.AlterModelTable(
            name="tenantuserprofile",
            table="tenant_user_profiles",
        ),
        migrations.DeleteModel(
            name="Designation",
        ),
        migrations.AddField(
            model_name="tenantdesignation",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who created this designation",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_tenant_designations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tenantdesignation",
            name="parent_designation",
            field=models.ForeignKey(
                blank=True,
                help_text="Parent designation in the hierarchy",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="subordinate_designations",
                to="tenants.tenantdesignation",
            ),
        ),
        migrations.AddField(
            model_name="tenantdesignation",
            name="tenant",
            field=models.ForeignKey(
                help_text="Tenant that owns this designation",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="designations",
                to="tenants.tenant",
            ),
        ),
        migrations.AddField(
            model_name="tenantdesignation",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last updated this designation",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_tenant_designations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="designationpermission",
            name="designation",
            field=models.ForeignKey(
                help_text="Designation receiving the permission",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="permission_assignments",
                to="tenants.tenantdesignation",
            ),
        ),
        migrations.AlterField(
            model_name="userdesignationassignment",
            name="designation",
            field=models.ForeignKey(
                help_text="Designation being assigned to the user",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_assignments",
                to="tenants.tenantdesignation",
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["tenant", "designation_code"],
                name="designation_tenant__de7364_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["tenant", "designation_level"],
                name="designation_tenant__b4330e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["tenant", "is_active"], name="designation_tenant__262f58_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["parent_designation"], name="designation_parent__fdfdad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["is_system_role"], name="designation_is_syst_f9de76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["created_at"], name="designation_created_d7ca33_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tenantdesignation",
            unique_together={("tenant", "designation_code")},
        ),
    ]
