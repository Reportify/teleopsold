# Generated by Django 5.2.4 on 2025-07-25 07:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("tenants", "0021_comprehensivedesignation_certifications_required_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ComprehensiveDepartment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "department_name",
                    models.CharField(
                        help_text="Department name - tenant defined", max_length=255
                    ),
                ),
                (
                    "department_code",
                    models.CharField(
                        help_text="Unique identifier within tenant", max_length=100
                    ),
                ),
                (
                    "department_level",
                    models.IntegerField(
                        default=1, help_text="Hierarchy level, 1=highest"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_operational",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this department handles field operations",
                    ),
                ),
                (
                    "requires_safety_training",
                    models.BooleanField(
                        default=False,
                        help_text="Whether employees in this department need safety training",
                    ),
                ),
                (
                    "can_manage_subordinates",
                    models.BooleanField(
                        default=False, help_text="Manage lower hierarchy"
                    ),
                ),
                (
                    "max_subordinates",
                    models.IntegerField(
                        blank=True, help_text="Team size limits", null=True
                    ),
                ),
                (
                    "hierarchy_path",
                    models.TextField(
                        blank=True, help_text="Materialized path for efficient queries"
                    ),
                ),
                (
                    "can_manage_users",
                    models.BooleanField(
                        default=False, help_text="User management permission"
                    ),
                ),
                (
                    "can_create_projects",
                    models.BooleanField(
                        default=False, help_text="Project creation permission"
                    ),
                ),
                (
                    "can_assign_tasks",
                    models.BooleanField(
                        default=False, help_text="Task assignment permission"
                    ),
                ),
                (
                    "can_approve_expenses",
                    models.BooleanField(
                        default=False, help_text="Expense approval authority"
                    ),
                ),
                (
                    "can_access_reports",
                    models.BooleanField(
                        default=False, help_text="Reporting access level"
                    ),
                ),
                (
                    "expense_approval_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Tenant-defined limits",
                        max_digits=15,
                    ),
                ),
                (
                    "is_system_department",
                    models.BooleanField(
                        default=False, help_text="True only for system departments"
                    ),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False, help_text="For tenant-created templates"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_comprehensive_departments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_department",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hierarchical parent",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_departments",
                        to="tenants.comprehensivedepartment",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comprehensive_departments",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_comprehensive_departments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Comprehensive Department",
                "verbose_name_plural": "Comprehensive Departments",
                "db_table": "comprehensive_departments",
                "ordering": ["department_level", "department_name"],
                "indexes": [
                    models.Index(
                        fields=["tenant"], name="comprehensi_tenant__79050e_idx"
                    ),
                    models.Index(
                        fields=["tenant", "department_code"],
                        name="comprehensi_tenant__8ae863_idx",
                    ),
                    models.Index(
                        fields=["department_level"],
                        name="comprehensi_departm_7d4e04_idx",
                    ),
                    models.Index(
                        fields=["parent_department"],
                        name="comprehensi_parent__ce02d5_idx",
                    ),
                    models.Index(
                        fields=["is_active"], name="comprehensi_is_acti_109a60_idx"
                    ),
                    models.Index(
                        fields=["is_system_department"],
                        name="comprehensi_is_syst_7a4004_idx",
                    ),
                ],
                "unique_together": {("tenant", "department_code")},
            },
        ),
    ]
