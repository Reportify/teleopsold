# Generated by Django 5.2.4 on 2025-07-25 08:38

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("tenants", "0022_add_comprehensive_department"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TenantDepartment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "department_name",
                    models.CharField(
                        help_text="Department name - tenant defined", max_length=255
                    ),
                ),
                (
                    "department_code",
                    models.CharField(
                        help_text="Unique identifier within tenant", max_length=100
                    ),
                ),
                (
                    "department_level",
                    models.IntegerField(
                        default=1, help_text="Hierarchy level, 1=highest"
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_operational",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this department handles field operations",
                    ),
                ),
                (
                    "requires_safety_training",
                    models.BooleanField(
                        default=False,
                        help_text="Whether employees in this department need safety training",
                    ),
                ),
                (
                    "can_manage_subordinates",
                    models.BooleanField(
                        default=False, help_text="Manage lower hierarchy"
                    ),
                ),
                (
                    "max_subordinates",
                    models.IntegerField(
                        blank=True, help_text="Team size limits", null=True
                    ),
                ),
                (
                    "hierarchy_path",
                    models.TextField(
                        blank=True, help_text="Materialized path for efficient queries"
                    ),
                ),
                (
                    "can_manage_users",
                    models.BooleanField(
                        default=False, help_text="User management permission"
                    ),
                ),
                (
                    "can_create_projects",
                    models.BooleanField(
                        default=False, help_text="Project creation permission"
                    ),
                ),
                (
                    "can_assign_tasks",
                    models.BooleanField(
                        default=False, help_text="Task assignment permission"
                    ),
                ),
                (
                    "can_approve_expenses",
                    models.BooleanField(
                        default=False, help_text="Expense approval authority"
                    ),
                ),
                (
                    "can_access_reports",
                    models.BooleanField(
                        default=False, help_text="Reporting access level"
                    ),
                ),
                (
                    "expense_approval_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Tenant-defined limits",
                        max_digits=15,
                    ),
                ),
                (
                    "is_system_department",
                    models.BooleanField(
                        default=False, help_text="True only for system departments"
                    ),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False, help_text="For tenant-created templates"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Tenant Department",
                "verbose_name_plural": "Tenant Departments",
                "db_table": "tenant_departments",
                "ordering": ["department_level", "department_name"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="comprehensivedepartment",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="comprehensivedepartment",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="comprehensivedepartment",
            name="parent_department",
        ),
        migrations.RemoveField(
            model_name="comprehensivedepartment",
            name="tenant",
        ),
        migrations.RemoveField(
            model_name="comprehensivedepartment",
            name="updated_by",
        ),
        migrations.AlterUniqueTogether(
            name="comprehensivedesignation",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="comprehensivedesignation",
            name="created_by",
        ),
        migrations.RemoveField(
            model_name="comprehensivedesignation",
            name="parent_designation",
        ),
        migrations.RemoveField(
            model_name="comprehensivedesignation",
            name="tenant",
        ),
        migrations.RemoveField(
            model_name="comprehensivedesignation",
            name="updated_by",
        ),
        migrations.AlterField(
            model_name="designationbasepermission",
            name="designation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="base_permissions",
                to="tenants.tenantdesignation",
            ),
        ),
        migrations.AlterModelOptions(
            name="tenantdesignation",
            options={
                "ordering": ["designation_level", "designation_name"],
                "verbose_name": "Comprehensive Designation",
                "verbose_name_plural": "Comprehensive Designations",
            },
        ),
        migrations.RemoveIndex(
            model_name="tenantdesignation",
            name="designation_tenant__b4330e_idx",
        ),
        migrations.RemoveIndex(
            model_name="tenantdesignation",
            name="designation_tenant__262f58_idx",
        ),
        migrations.RemoveIndex(
            model_name="tenantdesignation",
            name="designation_created_d7ca33_idx",
        ),
        migrations.RenameIndex(
            model_name="tenantdesignation",
            new_name="comprehensi_tenant__85cd21_idx",
            old_name="designation_tenant__de7364_idx",
        ),
        migrations.RenameIndex(
            model_name="tenantdesignation",
            new_name="comprehensi_parent__16b00b_idx",
            old_name="designation_parent__fdfdad_idx",
        ),
        migrations.RenameIndex(
            model_name="tenantdesignation",
            new_name="comprehensi_is_syst_9d9de1_idx",
            old_name="designation_is_syst_f9de76_idx",
        ),
        migrations.AddField(
            model_name="tenantdesignation",
            name="certifications_required",
            field=models.JSONField(
                default=dict,
                help_text="Required certifications for field positions: {farmtocli: true, fat: false, medical: true}",
            ),
        ),
        migrations.AddField(
            model_name="tenantdesignation",
            name="designation_type",
            field=models.CharField(
                choices=[("field", "Field"), ("non_field", "Non-Field")],
                default="non_field",
                help_text="Whether this is a field or non-field designation",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="approval_authority_level",
            field=models.IntegerField(
                default=0, help_text="Approval limits - tenant defined"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="can_access_reports",
            field=models.BooleanField(
                default=False, help_text="Reporting access level"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="can_approve_expenses",
            field=models.BooleanField(
                default=False, help_text="Expense approval authority"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="can_assign_tasks",
            field=models.BooleanField(
                default=False, help_text="Task assignment permission"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="can_create_projects",
            field=models.BooleanField(
                default=False, help_text="Project creation permission"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="can_manage_subordinates",
            field=models.BooleanField(
                default=False, help_text="Manage lower hierarchy"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="can_manage_users",
            field=models.BooleanField(
                default=False, help_text="User management permission"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_designations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="cross_functional_access",
            field=models.BooleanField(
                default=False, help_text="Can work across functions"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="custom_capabilities",
            field=models.JSONField(
                default=dict, help_text="Tenant-specific capabilities"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="data_access_level",
            field=models.CharField(
                choices=[
                    ("View_Only", "View Only"),
                    ("Edit_Own", "Edit Own Records"),
                    ("Edit_Department", "Edit Department Records"),
                    ("Edit_All", "Edit All Records"),
                    ("Admin", "Administrative Access"),
                ],
                default="View_Only",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="delegation_allowed",
            field=models.BooleanField(
                default=False, help_text="Can delegate permissions"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="deleted_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="description",
            field=models.TextField(blank=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="designation_code",
            field=models.CharField(
                help_text="Unique identifier within tenant", max_length=100
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="designation_level",
            field=models.IntegerField(
                default=10, help_text="Hierarchy level, 1=highest"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="designation_name",
            field=models.CharField(
                help_text="Role title - tenant defined", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="expense_approval_limit",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Tenant-defined limits",
                max_digits=15,
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="feature_access",
            field=models.JSONField(
                default=dict, help_text="Tenant-defined feature access"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="functional_scope",
            field=models.JSONField(
                default=list, help_text="Departments, functions - tenant defined"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="geographic_scope",
            field=models.JSONField(
                default=list, help_text="Circles, regions - tenant defined"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="hierarchy_path",
            field=models.TextField(
                blank=True,
                default=1,
                help_text="Materialized path for efficient queries",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="id",
            field=models.BigAutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="is_active",
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="is_system_role",
            field=models.BooleanField(
                default=False, help_text="True only for Super Admin"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="is_template",
            field=models.BooleanField(
                default=False, help_text="For tenant-created templates"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="max_subordinates",
            field=models.IntegerField(
                blank=True, help_text="Team size limits", null=True
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="multi_location_access",
            field=models.BooleanField(
                default=False, help_text="Can work across locations"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="parent_designation",
            field=models.ForeignKey(
                blank=True,
                help_text="Hierarchical parent",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="child_designations",
                to="tenants.tenantdesignation",
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="permissions",
            field=models.JSONField(
                default=list, help_text="Tenant-defined permissions"
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tenant_designations",
                to="tenants.tenant",
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_designations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterModelTable(
            name="tenantdesignation",
            table="comprehensive_designations",
        ),
        migrations.AddField(
            model_name="tenantdepartment",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_tenant_departments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="tenantdepartment",
            name="parent_department",
            field=models.ForeignKey(
                blank=True,
                help_text="Hierarchical parent",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="child_departments",
                to="tenants.tenantdepartment",
            ),
        ),
        migrations.AddField(
            model_name="tenantdepartment",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tenant_departments",
                to="tenants.tenant",
            ),
        ),
        migrations.AddField(
            model_name="tenantdepartment",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_tenant_departments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="tenantdesignation",
            name="department",
            field=models.ForeignKey(
                blank=True,
                help_text="Department this designation belongs to",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="designations",
                to="tenants.tenantdepartment",
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["tenant"], name="comprehensi_tenant__57ca21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["designation_level"], name="comprehensi_designa_08f362_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdesignation",
            index=models.Index(
                fields=["is_active"], name="comprehensi_is_acti_74dfa3_idx"
            ),
        ),
        migrations.DeleteModel(
            name="ComprehensiveDepartment",
        ),
        migrations.DeleteModel(
            name="ComprehensiveDesignation",
        ),
        migrations.AddIndex(
            model_name="tenantdepartment",
            index=models.Index(
                fields=["tenant"], name="tenant_depa_tenant__b0ea27_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdepartment",
            index=models.Index(
                fields=["tenant", "department_code"],
                name="tenant_depa_tenant__1e5dfa_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdepartment",
            index=models.Index(
                fields=["department_level"], name="tenant_depa_departm_2228e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdepartment",
            index=models.Index(
                fields=["parent_department"], name="tenant_depa_parent__cb84ab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdepartment",
            index=models.Index(
                fields=["is_active"], name="tenant_depa_is_acti_86a431_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantdepartment",
            index=models.Index(
                fields=["is_system_department"], name="tenant_depa_is_syst_c49410_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tenantdepartment",
            unique_together={("tenant", "department_code")},
        ),
    ]
