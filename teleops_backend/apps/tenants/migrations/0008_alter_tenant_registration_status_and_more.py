# Generated by Django 4.2.10 on 2025-07-19 22:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tenants", "0007_add_invitation_fields"),
    ]

    operations = [
        migrations.AlterField(
            model_name="tenant",
            name="registration_status",
            field=models.CharField(
                choices=[
                    ("Pending", "Pending Review"),
                    ("Approved", "Approved"),
                    ("Rejected", "Rejected"),
                    ("Expired", "Expired"),
                    ("Warnings_Raised", "Warnings Raised"),
                    ("Clarification_Required", "Clarification Required"),
                    ("Under_Review", "Under Review"),
                ],
                default="Pending",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="tenantinvitation",
            name="status",
            field=models.CharField(
                choices=[
                    ("Pending", "Pending"),
                    ("Accepted", "Accepted"),
                    ("Completed", "Completed"),
                    ("Expired", "Expired"),
                    ("Cancelled", "Cancelled"),
                ],
                default="Pending",
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="TenantComplianceIssue",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "issue_type",
                    models.CharField(
                        choices=[
                            ("Warning", "Warning"),
                            ("Clarification_Required", "Clarification Required"),
                            ("Documentation_Missing", "Documentation Missing"),
                            ("Business_Verification", "Business Verification"),
                            ("Compliance_Review", "Compliance Review"),
                            ("Legal_Review", "Legal Review"),
                            ("Financial_Verification", "Financial Verification"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("Low", "Low Priority"),
                            ("Medium", "Medium Priority"),
                            ("High", "High Priority"),
                            ("Critical", "Critical"),
                        ],
                        default="Medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Open", "Open"),
                            ("In_Progress", "In Progress"),
                            ("Resolved", "Resolved"),
                            ("Escalated", "Escalated"),
                            ("Closed", "Closed"),
                        ],
                        default="Open",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "required_action",
                    models.TextField(
                        help_text="Clear description of what tenant needs to do to resolve this issue"
                    ),
                ),
                (
                    "required_documents",
                    models.JSONField(
                        default=list,
                        help_text="List of documents required to resolve this issue",
                    ),
                ),
                (
                    "submitted_documents",
                    models.JSONField(
                        default=list, help_text="List of documents submitted by tenant"
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        blank=True, help_text="Expected resolution date", null=True
                    ),
                ),
                ("raised_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "resolution_notes",
                    models.TextField(
                        blank=True, help_text="Notes about how the issue was resolved"
                    ),
                ),
                (
                    "tenant_response",
                    models.TextField(
                        blank=True, help_text="Tenant's response or clarification"
                    ),
                ),
                ("tenant_response_at", models.DateTimeField(blank=True, null=True)),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True, help_text="Internal notes not visible to tenant"
                    ),
                ),
                (
                    "is_blocking",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this issue blocks tenant operations",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_compliance_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "raised_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="raised_compliance_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_compliance_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_issues",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tenant Compliance Issue",
                "verbose_name_plural": "Tenant Compliance Issues",
                "db_table": "tenant_compliance_issues",
                "ordering": ["-raised_at"],
            },
        ),
        migrations.CreateModel(
            name="TenantComplianceDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("Business_Registration", "Business Registration"),
                            ("GST_Certificate", "GST Certificate"),
                            ("PAN_Card", "PAN Card"),
                            ("Address_Proof", "Address Proof"),
                            ("Bank_Statement", "Bank Statement"),
                            ("Audited_Financials", "Audited Financials"),
                            ("Insurance_Certificate", "Insurance Certificate"),
                            ("License_Certificate", "License Certificate"),
                            ("Other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("document_name", models.CharField(max_length=255)),
                ("document_file", models.FileField(upload_to="compliance_documents/")),
                ("document_description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending_Review", "Pending Review"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                            ("Requires_Clarification", "Requires Clarification"),
                        ],
                        default="Pending_Review",
                        max_length=30,
                    ),
                ),
                ("review_notes", models.TextField(blank=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "compliance_issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="tenants.tenantcomplianceissue",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_compliance_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_compliance_documents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Tenant Compliance Document",
                "verbose_name_plural": "Tenant Compliance Documents",
                "db_table": "tenant_compliance_documents",
                "ordering": ["-uploaded_at"],
            },
        ),
        migrations.AddIndex(
            model_name="tenantcomplianceissue",
            index=models.Index(
                fields=["tenant", "status"], name="tenant_comp_tenant__25c952_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantcomplianceissue",
            index=models.Index(
                fields=["severity", "status"], name="tenant_comp_severit_11a244_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantcomplianceissue",
            index=models.Index(
                fields=["issue_type"], name="tenant_comp_issue_t_71d10a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantcomplianceissue",
            index=models.Index(
                fields=["raised_at"], name="tenant_comp_raised__8a1673_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="tenantcomplianceissue",
            index=models.Index(
                fields=["due_date"], name="tenant_comp_due_dat_6a7dd7_idx"
            ),
        ),
    ]
