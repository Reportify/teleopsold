# Generated by Django 4.2.10 on 2025-07-22 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tenants", "0017_fix_inactive_invitation_relationships"),
    ]

    operations = [
        migrations.CreateModel(
            name="ComprehensiveDesignation",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "designation_name",
                    models.CharField(
                        help_text="Role title - tenant defined", max_length=255
                    ),
                ),
                (
                    "designation_code",
                    models.CharField(
                        help_text="Unique identifier within tenant", max_length=100
                    ),
                ),
                (
                    "designation_level",
                    models.IntegerField(
                        default=10, help_text="Hierarchy level, 1=highest"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        help_text="Functional department - tenant defined",
                        max_length=100,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "can_manage_subordinates",
                    models.BooleanField(
                        default=False, help_text="Manage lower hierarchy"
                    ),
                ),
                (
                    "approval_authority_level",
                    models.IntegerField(
                        default=0, help_text="Approval limits - tenant defined"
                    ),
                ),
                (
                    "delegation_allowed",
                    models.BooleanField(
                        default=False, help_text="Can delegate permissions"
                    ),
                ),
                (
                    "max_subordinates",
                    models.IntegerField(
                        blank=True, help_text="Team size limits", null=True
                    ),
                ),
                (
                    "hierarchy_path",
                    models.TextField(
                        blank=True, help_text="Materialized path for efficient queries"
                    ),
                ),
                (
                    "permissions",
                    models.JSONField(
                        default=list, help_text="Tenant-defined permissions"
                    ),
                ),
                (
                    "feature_access",
                    models.JSONField(
                        default=dict, help_text="Tenant-defined feature access"
                    ),
                ),
                (
                    "data_access_level",
                    models.CharField(
                        choices=[
                            ("View_Only", "View Only"),
                            ("Restricted", "Restricted"),
                            ("Limited", "Limited"),
                            ("Full", "Full"),
                        ],
                        default="View_Only",
                        max_length=50,
                    ),
                ),
                (
                    "custom_capabilities",
                    models.JSONField(
                        default=dict, help_text="Tenant-specific capabilities"
                    ),
                ),
                (
                    "geographic_scope",
                    models.JSONField(
                        default=list, help_text="Circles, regions - tenant defined"
                    ),
                ),
                (
                    "functional_scope",
                    models.JSONField(
                        default=list,
                        help_text="Departments, functions - tenant defined",
                    ),
                ),
                (
                    "cross_functional_access",
                    models.BooleanField(
                        default=False, help_text="Can work across functions"
                    ),
                ),
                (
                    "multi_location_access",
                    models.BooleanField(
                        default=False, help_text="Can work across locations"
                    ),
                ),
                (
                    "can_manage_users",
                    models.BooleanField(
                        default=False, help_text="User management permission"
                    ),
                ),
                (
                    "can_create_projects",
                    models.BooleanField(
                        default=False, help_text="Project creation permission"
                    ),
                ),
                (
                    "can_assign_tasks",
                    models.BooleanField(
                        default=False, help_text="Task assignment permission"
                    ),
                ),
                (
                    "can_approve_expenses",
                    models.BooleanField(
                        default=False, help_text="Expense approval authority"
                    ),
                ),
                (
                    "can_access_reports",
                    models.BooleanField(
                        default=False, help_text="Reporting access level"
                    ),
                ),
                (
                    "expense_approval_limit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Tenant-defined limits",
                        max_digits=15,
                    ),
                ),
                (
                    "is_system_role",
                    models.BooleanField(
                        default=False, help_text="True only for Super Admin"
                    ),
                ),
                (
                    "is_template",
                    models.BooleanField(
                        default=False, help_text="For tenant-created templates"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_designations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_designation",
                    models.ForeignKey(
                        blank=True,
                        help_text="Hierarchical parent",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="child_designations",
                        to="tenants.comprehensivedesignation",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comprehensive_designations",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_designations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Comprehensive Designation",
                "verbose_name_plural": "Comprehensive Designations",
                "db_table": "comprehensive_designations",
                "ordering": ["designation_level", "designation_name"],
            },
        ),
        migrations.CreateModel(
            name="CustomPermission",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("permission_name", models.CharField(max_length=100)),
                ("permission_code", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "permission_type",
                    models.CharField(
                        choices=[
                            ("action", "Action"),
                            ("access", "Access"),
                            ("approval", "Approval"),
                            ("management", "Management"),
                            ("reporting", "Reporting"),
                            ("custom", "Custom"),
                        ],
                        default="action",
                        max_length=50,
                    ),
                ),
                ("requires_approval", models.BooleanField(default=False)),
                ("is_delegatable", models.BooleanField(default=True)),
                (
                    "scope_required",
                    models.BooleanField(
                        default=False, help_text="Requires geographic/functional scope"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Custom Permission",
                "verbose_name_plural": "Custom Permissions",
                "db_table": "custom_permissions",
                "ordering": ["category", "sort_order", "permission_name"],
            },
        ),
        migrations.CreateModel(
            name="SystemRole",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("role_name", models.CharField(max_length=100, unique=True)),
                ("role_code", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "system_permissions",
                    models.JSONField(help_text="Platform-level permissions"),
                ),
                ("is_tenant_scoped", models.BooleanField(default=True)),
                ("can_access_all_tenants", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "System Role",
                "verbose_name_plural": "System Roles",
                "db_table": "system_roles",
            },
        ),
        migrations.CreateModel(
            name="PermissionCategory",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("category_name", models.CharField(max_length=100)),
                ("category_code", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                (
                    "is_system_category",
                    models.BooleanField(
                        default=False, help_text="Core platform categories"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sort_order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_categories",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Permission Category",
                "verbose_name_plural": "Permission Categories",
                "db_table": "permission_categories",
                "ordering": ["sort_order", "category_name"],
            },
        ),
        migrations.CreateModel(
            name="DesignationTemplate",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("template_name", models.CharField(max_length=100)),
                ("template_description", models.TextField(blank=True)),
                (
                    "industry_category",
                    models.CharField(
                        blank=True,
                        help_text="e.g., Technology, Construction",
                        max_length=100,
                    ),
                ),
                (
                    "designation_data",
                    models.JSONField(help_text="Complete designation configuration"),
                ),
                (
                    "permission_set",
                    models.JSONField(help_text="Associated permissions"),
                ),
                (
                    "hierarchy_suggestions",
                    models.JSONField(
                        default=dict, help_text="Suggested hierarchy relationships"
                    ),
                ),
                ("usage_count", models.IntegerField(default=0)),
                (
                    "is_public",
                    models.BooleanField(
                        default=False, help_text="Can be shared with other tenants"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="Verified by platform"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designation_templates",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Designation Template",
                "verbose_name_plural": "Designation Templates",
                "db_table": "designation_templates",
            },
        ),
        migrations.CreateModel(
            name="DesignationPermission",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("granted", "Granted"),
                            ("denied", "Denied"),
                            ("conditional", "Conditional"),
                            ("approval_required", "Approval Required"),
                        ],
                        default="granted",
                        max_length=20,
                    ),
                ),
                (
                    "scope_restriction",
                    models.JSONField(
                        default=dict, help_text="Geographic/functional restrictions"
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(default=dict, help_text="Conditional permissions"),
                ),
                ("approval_required", models.BooleanField(default=False)),
                ("effective_from", models.DateField(auto_now_add=True)),
                ("effective_to", models.DateField(blank=True, null=True)),
                ("is_temporary", models.BooleanField(default=False)),
                ("granted_at", models.DateTimeField(auto_now_add=True)),
                ("revoked_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "designation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_assignments",
                        to="tenants.comprehensivedesignation",
                    ),
                ),
                (
                    "granted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="granted_designation_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designation_assignments",
                        to="tenants.custompermission",
                    ),
                ),
                (
                    "revoked_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="revoked_designation_permissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Designation Permission",
                "verbose_name_plural": "Designation Permissions",
                "db_table": "designation_permissions",
            },
        ),
        migrations.AddField(
            model_name="custompermission",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="permissions",
                to="tenants.permissioncategory",
            ),
        ),
        migrations.AddField(
            model_name="custompermission",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="custompermission",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="custom_permissions",
                to="tenants.tenant",
            ),
        ),
        migrations.CreateModel(
            name="UserDesignationAssignment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("is_primary_designation", models.BooleanField(default=True)),
                ("is_temporary", models.BooleanField(default=False)),
                ("assignment_reason", models.CharField(blank=True, max_length=255)),
                ("geographic_scope_override", models.JSONField(default=dict)),
                ("functional_scope_override", models.JSONField(default=dict)),
                (
                    "permission_overrides",
                    models.JSONField(
                        default=dict, help_text="Additional or restricted permissions"
                    ),
                ),
                ("effective_from", models.DateField(auto_now_add=True)),
                ("effective_to", models.DateField(blank=True, null=True)),
                ("auto_expire", models.BooleanField(default=False)),
                ("approval_required", models.BooleanField(default=False)),
                (
                    "assignment_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Active", "Active"),
                            ("Suspended", "Suspended"),
                            ("Expired", "Expired"),
                            ("Revoked", "Revoked"),
                        ],
                        default="Active",
                        max_length=50,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_user_designations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_user_designations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "designation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_assignments",
                        to="tenants.comprehensivedesignation",
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="designation_assignments",
                        to="tenants.tenantuserprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Designation Assignment",
                "verbose_name_plural": "User Designation Assignments",
                "db_table": "user_designation_assignments",
                "indexes": [
                    models.Index(
                        fields=["user_profile"], name="user_design_user_pr_459e2f_idx"
                    ),
                    models.Index(
                        fields=["designation"], name="user_design_designa_44d087_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="user_design_is_acti_8e1f72_idx"
                    ),
                    models.Index(
                        fields=["is_primary_designation"],
                        name="user_design_is_prim_ab2757_idx",
                    ),
                ],
                "unique_together": {("user_profile", "designation", "effective_from")},
            },
        ),
        migrations.AddIndex(
            model_name="permissioncategory",
            index=models.Index(
                fields=["tenant"], name="permission__tenant__3fc90e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="permissioncategory",
            index=models.Index(
                fields=["tenant", "category_code"],
                name="permission__tenant__9cae2f_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="permissioncategory",
            unique_together={("tenant", "category_code")},
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["tenant"], name="designation_tenant__f6dbbe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["industry_category"], name="designation_industr_b31b79_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationtemplate",
            index=models.Index(
                fields=["is_public"], name="designation_is_publ_d26ac4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="designationtemplate",
            unique_together={("tenant", "template_name")},
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["designation"], name="designation_designa_5d86ca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["permission"], name="designation_permiss_c23a6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="designationpermission",
            index=models.Index(
                fields=["is_active"], name="designation_is_acti_299b79_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="designationpermission",
            unique_together={("designation", "permission")},
        ),
        migrations.AddIndex(
            model_name="custompermission",
            index=models.Index(
                fields=["tenant"], name="custom_perm_tenant__4d5b70_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="custompermission",
            index=models.Index(
                fields=["category"], name="custom_perm_categor_c7a423_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="custompermission",
            index=models.Index(
                fields=["tenant", "permission_code"],
                name="custom_perm_tenant__88b366_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="custompermission",
            unique_together={("tenant", "permission_code")},
        ),
        migrations.AddIndex(
            model_name="comprehensivedesignation",
            index=models.Index(
                fields=["tenant"], name="comprehensi_tenant__57ca21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comprehensivedesignation",
            index=models.Index(
                fields=["tenant", "designation_code"],
                name="comprehensi_tenant__85cd21_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="comprehensivedesignation",
            index=models.Index(
                fields=["designation_level"], name="comprehensi_designa_08f362_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comprehensivedesignation",
            index=models.Index(
                fields=["parent_designation"], name="comprehensi_parent__16b00b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comprehensivedesignation",
            index=models.Index(
                fields=["is_active"], name="comprehensi_is_acti_74dfa3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="comprehensivedesignation",
            index=models.Index(
                fields=["is_system_role"], name="comprehensi_is_syst_9d9de1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="comprehensivedesignation",
            unique_together={("tenant", "designation_code")},
        ),
    ]
