# Generated by Django 4.2.10 on 2025-07-19 12:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("tenants", "0005_alter_circlevendorrelationship_vendor_code"),
    ]

    operations = [
        migrations.AlterField(
            model_name="circlevendorrelationship",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_circle_vendor_relationships",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="VendorRelationship",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vendor_name",
                    models.CharField(
                        blank=True,
                        help_text="Vendor name before registration",
                        max_length=255,
                    ),
                ),
                (
                    "vendor_code",
                    models.CharField(
                        help_text="Client-generated vendor code (unique within client's vendor management system)",
                        max_length=100,
                    ),
                ),
                (
                    "vendor_email",
                    models.EmailField(
                        blank=True,
                        help_text="Vendor email for invitation",
                        max_length=254,
                    ),
                ),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[
                            ("Primary_Vendor", "Primary Vendor"),
                            ("Subcontractor", "Subcontractor"),
                            ("Partnership", "Partnership"),
                            ("Service_Provider", "Service Provider"),
                            ("Preferred_Vendor", "Preferred Vendor"),
                            ("Backup_Vendor", "Backup Vendor"),
                        ],
                        default="Primary_Vendor",
                        max_length=50,
                    ),
                ),
                (
                    "relationship_status",
                    models.CharField(
                        choices=[
                            ("Invitation_Sent", "Invitation Sent"),
                            ("Pending_Approval", "Pending Approval"),
                            ("Active", "Active"),
                            ("Suspended", "Suspended"),
                            ("Terminated", "Terminated"),
                            ("Expired", "Expired"),
                            ("Under_Review", "Under Review"),
                        ],
                        default="Invitation_Sent",
                        max_length=50,
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("Independent", "Independent"),
                            ("Pending_Verification", "Pending Verification"),
                            ("Verified", "Verified"),
                            ("Verification_Rejected", "Verification Rejected"),
                            ("Requires_Update", "Requires Update"),
                        ],
                        default="Independent",
                        max_length=50,
                    ),
                ),
                (
                    "hierarchy_level",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="1=Direct vendor, 2=Sub-vendor, 3=Sub-sub-vendor, etc.",
                    ),
                ),
                (
                    "service_scope",
                    models.CharField(
                        choices=[
                            ("Circle_Wide", "Circle Wide"),
                            ("Regional", "Regional"),
                            ("District_Specific", "District Specific"),
                            ("Project_Based", "Project Based"),
                            ("Task_Specific", "Task Specific"),
                            ("On_Demand", "On Demand"),
                        ],
                        default="Circle_Wide",
                        max_length=50,
                    ),
                ),
                (
                    "service_areas",
                    models.JSONField(
                        default=list,
                        help_text="Geographic areas: districts, regions, or specific locations",
                    ),
                ),
                (
                    "service_capabilities",
                    models.JSONField(
                        default=list,
                        help_text="Service types: Dismantling, Installation, Maintenance, Survey, etc.",
                    ),
                ),
                (
                    "performance_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Overall performance rating (1.00 - 5.00)",
                        max_digits=3,
                        null=True,
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "delivery_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                (
                    "billing_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Rate per unit/hour/project",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "billing_unit",
                    models.CharField(
                        default="Per_Project",
                        help_text="Per_Hour, Per_Day, Per_Project, Per_Site, etc.",
                        max_length=50,
                    ),
                ),
                ("payment_terms", models.CharField(blank=True, max_length=100)),
                ("currency", models.CharField(default="INR", max_length=10)),
                (
                    "billing_frequency",
                    models.CharField(default="Monthly", max_length=20),
                ),
                (
                    "revenue_share_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Percentage of revenue shared with parent vendor",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "vendor_permissions",
                    models.JSONField(
                        default=dict,
                        help_text="Permissions vendor has for client data access",
                    ),
                ),
                (
                    "data_access_level",
                    models.CharField(
                        choices=[
                            ("None", "No Access"),
                            ("Basic", "Basic Info Only"),
                            ("Project_Specific", "Project Specific Data"),
                            ("Circle_Data", "Circle Level Data"),
                            ("Full_Access", "Full Access"),
                        ],
                        default="Basic",
                        max_length=50,
                    ),
                ),
                ("communication_allowed", models.BooleanField(default=True)),
                ("contract_start_date", models.DateField(blank=True, null=True)),
                ("contract_end_date", models.DateField(blank=True, null=True)),
                ("auto_renewal", models.BooleanField(default=False)),
                ("notice_period_days", models.PositiveIntegerField(default=30)),
                ("invitation_token", models.CharField(blank=True, max_length=255)),
                ("invitation_sent_at", models.DateTimeField(blank=True, null=True)),
                ("invitation_expires_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "internal_notes",
                    models.TextField(
                        blank=True, help_text="Internal notes not visible to vendor"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_preferred", models.BooleanField(default=False)),
                (
                    "is_critical",
                    models.BooleanField(
                        default=False,
                        help_text="Critical vendor requiring special attention",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_activity_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_vendor_relationships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "client_tenant",
                    models.ForeignKey(
                        help_text="The tenant that hires/contracts the vendor",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_relationships_as_client",
                        to="tenants.tenant",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_vendor_relationships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_relationship",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent relationship for sub-contracting scenarios",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_relationships",
                        to="tenants.vendorrelationship",
                    ),
                ),
                (
                    "vendor_tenant",
                    models.ForeignKey(
                        blank=True,
                        help_text="The tenant providing services (null during invitation process)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_relationships_as_vendor",
                        to="tenants.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vendor Relationship",
                "verbose_name_plural": "Vendor Relationships",
                "db_table": "vendor_relationships",
                "indexes": [
                    models.Index(
                        fields=["client_tenant", "relationship_status"],
                        name="vendor_rela_client__b2020d_idx",
                    ),
                    models.Index(
                        fields=["vendor_tenant", "relationship_status"],
                        name="vendor_rela_vendor__d348b6_idx",
                    ),
                    models.Index(
                        fields=["vendor_code"], name="vendor_rela_vendor__3f8c26_idx"
                    ),
                    models.Index(
                        fields=["relationship_type", "is_active"],
                        name="vendor_rela_relatio_dece4c_idx",
                    ),
                    models.Index(
                        fields=["hierarchy_level"],
                        name="vendor_rela_hierarc_f6956e_idx",
                    ),
                    models.Index(
                        fields=["parent_relationship"],
                        name="vendor_rela_parent__9793c1_idx",
                    ),
                    models.Index(
                        fields=["verification_status"],
                        name="vendor_rela_verific_f82d2e_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="vendor_rela_created_3cb300_idx"
                    ),
                ],
                "unique_together": {
                    ("client_tenant", "vendor_tenant", "relationship_type"),
                    ("client_tenant", "vendor_code"),
                },
            },
        ),
    ]
